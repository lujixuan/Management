<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljx.dao.ProjectDao">
    <!-- 目的：为DAO接口方法提供sql语句配置 -->
    <!-- 查询用户和密码进行登录 -->
    <select id="listProject" resultType="com.ljx.dto.ProjectDto" >
		select  p.projectId,
			p.projectName,
			p.projectCode,
			DATE_FORMAT(p.projectDate,'%Y-%m-%d') projectDate,
			DATE_FORMAT(p.projectChangeDate,'%Y-%m-%d') projectChangeDate,
			p.projectDescribe,
			pi.projectInfoUserId userId,
			u.userName
		from projects p
			join projectInfos pi on p.projectId=pi.projectInfoProjectId
			join users u on pi.projectInfoUserId = u.userId
		<where>
			<if test="loginUserId != null and loginUserId != ''">
				AND pi.projectInfoUserId = #{loginUserId}
			</if>
			<if test="projectName != null and projectName != ''">
				AND p.projectName like '%'+#{projectName}+'%'
			</if>
			<if test="projectCode != null and projectCode != ''">
				AND p.projectCode = #{projectCode}
			</if>
			<if test="userId != null and userId != ''">
				AND pi.projectInfoUserId = #{userId}
			</if>
			<if test="userName != null and userName != ''">
				AND u.userName = #{userName}
			</if>
			<if test="projectDate != null and projectDate != '' and projectToDate != null and projectToDate != ''">
				AND p.projectDate between #{projectDate} and #{projectToDate}
			</if>
		</where>
		AND pi.projectInfoType='创建人'
	</select>

	<select id="searchProjectDetail" resultType="com.ljx.dto.ProjectDto">
		select  p.projectId,
		p.projectName,
		p.projectCode,
		DATE_FORMAT(p.projectDate,'%Y-%m-%d') projectDate,
		DATE_FORMAT(p.projectChangeDate,'%Y-%m-%d') projectChangeDate,
		p.projectDescribe,
		p.projectDoc,
		pi.projectInfoUserId userId,
		u.userName
		from projects p
		join projectInfos pi on p.projectId=pi.projectInfoProjectId
		join users u on pi.projectInfoUserId = u.userId
		<where>
			<if test="projectId != null and projectId != ''">
				AND p.projectId = #{projectId}
			</if>
		</where>
		AND pi.projectInfoType='创建人'
	</select>

	<select id="searchProjectInfoType" resultType="string">
		select pi.projectInfoType
		from projectInfos pi
		where pi.projectInfoProjectId = #{projectId}
		and pi.projectInfoUserId = #{loginUserId}
	</select>

	<select id="searchProjectUserNum" resultType="integer">
		select count(*)
		from projectInfos pi
		where pi.projectInfoProjectId = #{projectId}
		and pi.projectInfoType != "申请中"
	</select>

	<select id="searchProjectLabelList" resultType="com.ljx.dto.LabelDto">
		select labelValue
		from labels
		where labelProjectId = #{projectId}
		and labelType = '项目'
	</select>

	<select id="searchTaskLabelList" resultType="com.ljx.dto.LabelDto">
		select labelValue
		from labels
		where labelProjectId = #{projectId}
		and labelType = '任务'
	</select>

	<insert id="applyToProject" parameterType="com.ljx.dto.ApplyToProjectDto">
		insert
		into projectInfos
		values(#{projectInfoProjectId},#{projectInfoUserId},#{projectInfoType},#{projectInfoRemark});
	</insert>

	<delete id="deleteLabel">
		delete
		from labels
		where labelProjectId=#{labelProjectId}
		and labelType=#{labelType}
	</delete>

	<insert id="insertLabel">
		insert
		into labels(labelValue, labelProjectId, labelType)
		value(#{labelValue},#{labelProjectId},#{labelType});
	</insert>

	<update id="updateProjectInfo" parameterType="com.ljx.dto.ProjectDto">
		update projects
		set projectName=#{projectName},
			projectCode=#{projectCode},
			projectDoc=#{projectDoc},
			projectDescribe=#{projectDescribe},
			projectChangeDate=now()
		where projectId=#{projectId}
	</update>

	<insert id="insertProjectChangeInfo">
		insert
		into projectChanges(projectChangeProjectId, projectChangeUserId, projectChangeDate, projectChangeOldValue, projectChangeNewValue, projectChangePlace)
		value (#{projectChangeProjectid},#{projectChangeUserId},now(),#{projectChangeOldValue},#{projectChangeNewValue},#{projectChangeType})
	</insert>

	<insert id="insertProject" parameterType="com.ljx.dto.ProjectDto">
		insert
		into projects(projectDate,projectChangeDate)
		values (now(),now())
		<selectKey keyProperty="projectId" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<insert id="insertProjectInfo">
		insert
		into projectInfos(projectInfoProjectId, projectInfoUserId, projectInfoType)
		value (#{projectId},#{loginUserId},"创建人")
	</insert>

</mapper>